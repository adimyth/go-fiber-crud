basePath: /
definitions:
  schema.ToDo:
    properties:
      description:
        maxLength: 256
        minLength: 3
        type: string
      done:
        type: boolean
      title:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - description
    - title
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Swagger Example API
  version: "2.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - healthcheck
  /todos:
    get:
      consumes:
      - application/json
      description: Get all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schema.ToDo'
            type: array
      summary: Get all todos
      tags:
      - crud todos
    post:
      consumes:
      - application/json
      description: Create a todo. Provide title & description
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create a todo
      tags:
      - crud todos
  /todos/:id:
    delete:
      consumes:
      - application/json
      description: Provide an id to delete a todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete a todo
      tags:
      - crud todos
    get:
      consumes:
      - application/json
      description: Get todo by id
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ToDo'
      summary: Get todo by id
      tags:
      - crud todos
    patch:
      consumes:
      - application/json
      description: Update a todo. Provide title, description & id
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.ToDo'
      summary: Update a todo
      tags:
      - crud todos
  /verify/:status/:role:
    get:
      consumes:
      - application/json
      description: Middleware chaining
      parameters:
      - description: authenticated / not authenticated
        in: path
        name: status
        required: true
        type: string
      - description: admin / user / guest
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Middlewares Chaining demonstration
      tags:
      - verification
schemes:
- http
swagger: "2.0"
